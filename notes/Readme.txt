Документация проекта SkillNotes

1. Введение
Этот документ описывает функционал и технические особенности проекта SkillNotes - сервиса 
для управления персональными заметками, разработанного в рамках учебного проекта.

2. Функциональные требования
2.1 Общие требования
Сервис позволяет пользователям:
Регистрироваться и аутентифицироваться в системе.
Создавать, просматривать и редактировать заметки.
Архивировать и восстанавливать заметки.
Удалять заархивированные заметки.
Фильтровать заметки по диапазону дат.
Искать заметки по тексту в заголовке.
2.2 Описание страниц
Индексная страница (/):
Форма регистрации.
Форма аутентификации.
Кнопка входа через сторонние сервисы (опционально).
Основная страница (/dashboard):
Левая панель:
Список заметок (сортировка по времени - от новых к старым).

Фильтр:
По дате:
За последнюю неделю (по умолчанию)
За месяц
За 3 месяца
За всё время
Архив
Поиск по заголовку (опционально).
Область активной заметки:
Просмотр выбранной заметки (применимо).
Редактор заметки (применимо).
Действия с заметками:
Редактировать (из режима просмотра).
Сохранить (из режима создания/редактирования).
Отменить (из режима создания/редактирования).
Архивировать (из режима просмотра неархивной заметки).
Разархивировать (из режима просмотра архивной заметки).
Удалить (из режима просмотра архивной заметки).
Скачать PDF (опционально).

3. Технические требования
3.1 Общие требования
Проект использует Node.js в качестве серверного фреймворка.
Реализована работа с базой данных (MongoDB).
Используется Express фреймворк для создания API.
API сервиса структурирован по принципам REST.
Обеспечена безопасность:
Все действия доступны только аутентифицированным пользователям.
Проверка прав доступа к заметкам (пользователь может работать только со своими заметками).
Пароли хранятся в захешированном виде.
Секретные параметры (конфигурация базы данных, ключи API) хранятся в файле .env.
3.2 Настройка проекта
package.json: Файл содержит все зависимости проекта, скрипты для запуска, сборки и тестирования.
dependencies: Список необходимых библиотек.
devDependencies: Список инструментов для разработки.
scripts: Скрипты для запуска, сборки и тестирования.
3.3 Дополнительные требования
Проект должен быть развернут на стороннем сервере с уникальным доменным именем и работать по протоколу HTTPS.
Вся необходимая конфигурация базы данных должна выполняться автоматически при запуске проекта или отдельной командой.
Должен быть файл README с инструкцией по запуску проекта.
В репозитории должен быть образец файла конфигурации (.env-sample).

В package.json могут быть добавлены дополнительные зависимости в зависимости от выбранных технологий и функциональности.
В проекте могут быть использованы дополнительные скрипты в package.json.
